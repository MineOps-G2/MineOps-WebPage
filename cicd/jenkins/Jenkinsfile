pipeline {
  agent {
    kubernetes {
      yaml """
kind: Pod
metatdata:
  namespace: jenkins
spec:
  containers:
  - name: kaniko
    image: rohithkakarla/kaniko-alpine:amd64
    env:
    - name: DEST
      value: "087600766519.dkr.ecr.ap-northeast-2.amazonaws.com/web:${currentBuild.number}"
    - name: ENV
      valueFrom:
        secretKeyRef:
          name: webenv
          key: .env  
    imagePullPolicy: Always
    command:
    - /busybox/cat
    tty: true
    volumeMounts:
      - name: docker-config
        mountPath: /kaniko/.docker
  volumes:
    - name: docker-config
      projected:
        sources:
        configMap:
          name: docker-config
"""
    }
  }
  stages {
    stage('Build and Push with Kaniko') {
      steps {
        container(name: 'kaniko', shell: '/busybox/sh') {
          sh '''#!/busybox/sh
            git clone https://github.com/MineOps-G2/MineOps-WebPage.git
            ls ./MineOps-WebPage
            echo "$ENV" > ./MineOps-WebPage/.env
            ls ./MineOps-WebPage/src
            cat ./MineOps-WebPage/.env
            /kaniko/executor \\
            --git branch=main \\
            --context=dir://./MineOps-WebPage \\
            --destination="${DEST}"
          '''
        }
      }
      post {
            failure {
                echo 'Build and Push Failure'
                echo '${currentBuild.result}'
            }
            success {
                echo 'Build and Push Success'
                echo '${currentBuild.result}'
            }
      }
    }
    stage('Update Manifestfile (deployment.yaml)') {
      steps {
        // git credentialsId: 'pk',
        //         url: 'https://github.com/MineOps-G2/MineOps-WebPage.git',
        //         branch: 'main'
        sh "git checkout -b main"
        sh "sed -i 's/web:.*\$/web:${currentBuild.number}/g' ./cicd/ArgoCD/deployment.yaml"
        sh "git add ./cicd/ArgoCD/deployment.yaml"
        sh "git commit -m 'Update version of web:${currentBuild.number} image'"
        // sh "git remote add origin https://github.com/MineOps-G2/MineOps-WebPage.git"
        sh "git push -u origin main"
        // sh "git remote -v"
        // sh "git branch -a"
      }
      post {
            failure {
                echo 'Update Failure'
            }
            success {
                echo 'Update Success'
            }
      }
    }
    }
  }
